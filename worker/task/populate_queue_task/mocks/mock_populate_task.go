// Code generated by MockGen. DO NOT EDIT.
// Source: cmd/worker/task/populate_queue_task/populate_queue_task.go

// Package populateTask is a generated GoMock package.
package populateTask

import (
	reflect "reflect"

	dto "github.com/Edu4rdoNeves/ingestor-magalu/domain/dto"
	gomock "github.com/golang/mock/gomock"
)

// MockIPopulateQueueTask is a mock of IPopulateQueueTask interface.
type MockIPopulateQueueTask struct {
	ctrl     *gomock.Controller
	recorder *MockIPopulateQueueTaskMockRecorder
}

// MockIPopulateQueueTaskMockRecorder is the mock recorder for MockIPopulateQueueTask.
type MockIPopulateQueueTaskMockRecorder struct {
	mock *MockIPopulateQueueTask
}

// NewMockIPopulateQueueTask creates a new mock instance.
func NewMockIPopulateQueueTask(ctrl *gomock.Controller) *MockIPopulateQueueTask {
	mock := &MockIPopulateQueueTask{ctrl: ctrl}
	mock.recorder = &MockIPopulateQueueTaskMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPopulateQueueTask) EXPECT() *MockIPopulateQueueTaskMockRecorder {
	return m.recorder
}

// Run mocks base method.
func (m *MockIPopulateQueueTask) Run(populateQueueParams *dto.PopulateQueueParams) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Run", populateQueueParams)
}

// Run indicates an expected call of Run.
func (mr *MockIPopulateQueueTaskMockRecorder) Run(populateQueueParams interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Run", reflect.TypeOf((*MockIPopulateQueueTask)(nil).Run), populateQueueParams)
}
